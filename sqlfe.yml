routes:
  /users:
    query: >
      insert into "user"
      (name, email, password)
      values (${body.user.username}, ${body.user.email}, ${body.user.password})
      returning
        name as "user.username",
        email as "user.email",
        image as "user.image",
        bio as "user.bio",
        email as "user.token"
    arity: 1
  /users/login:
    query: >
      select
        name as "user.username",
        email as "user.email",
        image as "user.image",
        bio as "user.bio",
        email as "user.token"
      from "user"
      where
        email = ${body.user.email}
        and password = ${body.user.password}
    arity: 1
  /user:
    query: >
      select
        name as "user.username",
        email as "user.email",
        image as "user.image",
        bio as "user.bio",
        email as "user.token"
      from "user"
      where
        email = substring(${headers.authorization} from 7)
    arity: 1
    ignoreBody: true
  /articles:
    query: >
      select
        title as "articles[#].title",
        slug as "articles[#].slug",
        body as "articles[#].body",
        created_at as "articles[#].createdAt",
        updated_at as "articles[#].updatedAt",
        description as "articles[#].description",
        author.bio as "articles[#].author.bio",
        author.image as "articles[#].author.image",
        author.name as "articles[#].author.username",
        coalesce(article_favorite_count.count, 0) as "articles[#].favoritesCount",
        follow.follower_id is not null as "articles[#].author.following",
        favorite.user_id is not null as "articles[#].favorited"
      from article
      join "user" as author on author.id = article.author_id
      left join article_favorite_count on article_favorite_count.article_id = article.id
      join "user" as "current_user" on "current_user".email = substring(${headers.authorization} from 7)
      left join follow on
        follow.following_id = author.id
        and follow.follower_id = "current_user".id
      left join favorite on
        favorite.article_id = article.id
        and favorite.user_id = "current_user".id
      where
        true
        {{#query.author}}and author.name = ${query.author}{{/query.author}}
        {{#query.favorited}}and (select id from "user" where name = ${query.favorited}) = any(article_favorite_count.favoriters){{/query.favorited}}
      order by article.created_at
      {{#query.limit}}limit ${query.limit}{{/query.limit}}
      {{#query.offset}}offset ${query.offset}{{/query.offset}}
